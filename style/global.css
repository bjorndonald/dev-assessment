@import url("https://fonts.googleapis.com/css2?family=Inter:ital,opsz,wght@0,14..32,100..900;1,14..32,100..900&display=swap");

:root {
  --primary: #8576ff;
  --secondary: #fcf7ff;
  --success: #D1FAE5;
  --success-content: #10b981;
  --warning: #DBEAFE;
    --warning-content: #3B82F6;
  --error: #f43f5e;
  --accent: #F1F5F9;
  --neutral: #64748B;
  --b-1: #ffffff;
  --b-2: #ffffff;
  --b-3: #E2E8F0;
  --bc: #334155;
  --border: #f2f2f7;
}

/* @media (prefers-color-scheme: dark) {
  :root,
  ::backdrop {
    --b-1: #383544;
    --b-2: #484554;
  }
} */

html.dark {
  --bc: #fff;
  --accent: #ADA9BB;
  --secondary: #8576ff;
  --b-1: #383544;
  --b-2: #484554;
}

* {
  box-sizing: border-box;
}

body {
  margin: 0;
  padding: 0;
  background-color: var(--b-1);
  color: var(--bc);
  font-family: "Inter", sans-serif;
  display: flex;
  min-height: 100vh;
  width: 100vw;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  margin: 0;
}

main {
  flex-grow: 1;
  min-height: 100vh;
}

.mobile-nav {
  display: none;
}

@media screen and (max-width: 475px) {
  .mobile-nav {
    padding: 1rem;
    display: flex;
    border-bottom: 1px solid var(--b-3);
    align-items: center;
    justify-content: space-between;
  }

  .nav-toggle {
    display: none;
  }
}

/* TYPOGRAPHY */
small {
  font-size: 12px;
  line-height: 16px;
}

span, a {
  font-size: 14px;
  line-height: 20px;
}

/* DROPDOWN */
.dropdown {
  position: relative;
  height: 36px;
}

.dropdown input {
  position: absolute;
  top: 0;
  left: 0;
  cursor: pointer;
  width: 100%;
  height: 100%;
  opacity: 0;
  z-index: 2;
}

.dropdown-btn {
  padding: 8px 0px 8px 16px;
  display: flex;
  border: 1px solid var(--b-3);
  border-radius: 2px;
  gap: 8px;
}

.dark .dropdown-btn {
  border: 1px solid var(--b-2);
  background-color: var(--b-2);
}

.dropdown-btn span {
  font-size: 14px;
  line-height: 20px;
  flex-grow: 1;
  white-space: nowrap;
}

.dropdown-btn svg {
  width: 20px;
  height: 20px;
  
}

.dark .dropdown-btn svg path {
  stroke: #fff;
}

.dropdown .dropdown-list {
  display: none;
  position: absolute;
    top: 110%;
    width: 100%;
    left: 0;
    background-color: #fff;
    border: 1px solid var(--b-3);
    padding: 8px;
    flex-direction: column;
}

.dark .dropdown .dropdown-list {
  border-color: var(--b-2);
  background-color: var(--b-2);
}

.dropdown .dropdown-list .dropdown-item {
  padding: 8px;
  border-radius: 5px;
  color: var(--bc);
  cursor: pointer;
}

.dropdown .dropdown-list .dropdown-item:hover {
  background-color: var(--b-2);
}

.dropdown input:checked ~ .dropdown-list {
  display: flex;
}

/* MODAL */
.modal {
  pointer-events: none;
  position: fixed;
  top: 0;
  right: 0;
  bottom: 0;
  left: 0;
  margin: 0;
  display: grid;
  height: 100%;
  max-height: none;
  width: 100%;
  max-width: none;
  justify-items: center;
  padding: 0;
  opacity: 0;
  overscroll-behavior: contain;
  z-index: 999;
  background-color: transparent;
  color: inherit;
  transition-duration: .2s;
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  transition-property: transform, opacity, visibility;
  overflow-y: hidden;
}

.modal[open] {
  pointer-events: auto;
  visibility: visible;
  opacity: 1;
}

.modal-content {
  position: relative;
  max-height: calc(100vh - 5em);
  grid-column-start: 1;
  grid-row-start: 1;
  width: 91.666667%;
  max-width: 440px;
 --translate-y: 0px;
  --scale-x: 1;
  --scale-y: 1;
  transform: translate(0, var(--translate-y)) scaleX(var(--scale-x)) scaleY(var(--scale-y));
  border-bottom-right-radius: 1rem;
  border-bottom-left-radius: 1rem;
  border-top-left-radius: 1rem;
  border-top-right-radius: 1rem;
  --bg-opacity: 1;
  background-color: var(--b-1, oklch(var(--b-1) / var(--bg-opacity)));
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, -webkit-backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter;
  transition-property: color, background-color, border-color, text-decoration-color, fill, stroke, opacity, box-shadow, transform, filter, backdrop-filter, -webkit-backdrop-filter;
  transition-timing-function: cubic-bezier(.4, 0, .2, 1);
  transition-timing-function: cubic-bezier(0, 0, .2, 1);
  transition-duration: .2s;
  box-shadow: #00000040 0 25px 50px -12px;
  overflow-y: auto;
  overscroll-behavior: contain;
  background-color: var(--b-1);
}

.dark .modal-content {
  background-color: var(--b-2);
}

.modal-header{
  display: flex;
  flex-direction: column;
  padding: 24px;
  padding-bottom: 0;
}

.modal-header h4 {
  font-size: 18px;
  line-height: 28px;
  color: var(--bc);
}

.modal-close {
  position: absolute;
  top: 1.5rem;
  right: 1.5rem;
  width: 1.5rem;
  height: 1.5rem;
  border-radius: 50%;
  background-color: #ADA9BB;
  display: flex;
  align-items: center;
  justify-content: center;
}

.modal-close svg {
  width: 12px;
  height: 12px;
}

.modal-body {
  display: flex;
  flex-direction: column;
}

.modal-body p {
  padding: 24px;
}

.modal-footer{
  padding: 24px;
  background-color: #F8FAFC;
  display: flex;
  gap: 10px;
  justify-content: space-between;
}

.dark .modal-footer {
  background-color: #ADA9BB;
}

.modal-footer .modal-actions {
  display: flex;
  gap: 10px;
}

.modal-footer .modal-actions .edit-btn {
  padding: 0.5rem 1rem;
  border-radius: 2px;
  border: 1px solid var(--b-3);
}

.modal-footer .modal-actions .delete-btn {
  padding: 0.5rem 1rem;
  border-radius: 2px;
  color: #fff;
  background-color: var(--error);
  border: 1px solid var(--error);
}

.modal-footer .modal-actions .delete-btn {
  padding: 0.5rem 1rem;
  border-radius: 2px;
  color: #fff;
  background-color: var(--primary);
  border: 1px solid var(--primary);
}

.avatars {
  display: flex;
  align-items: center;
}

.avatars .avatar {
  width: 32px;
  height: 32px;
  padding: 2px;
  border-radius: 50%;
  margin-left: -12px;
}

.avatars .avatar:first-child {
  margin-left: 0;
}

.avatars .avatar img {
  width: 100%;
  height: 100%;
}

/* COLORED TEXTS */
.green {
  color: var(--success-content);
}

.red {
  color: var(--error);
}